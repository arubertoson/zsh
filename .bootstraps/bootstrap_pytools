#!/usr/bin/env bash

# Global pointer to virtual environment storage
export WORKON_HOME="${XDG_CACHE_HOME}/venvs"

# ------------------------------------------------------------------------------ 
# Pyenv
# ------------------------------------------------------------------------------ 
export PYENV_ROOT="${XDG_APP_HOME}/pyenv"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Ensure pyenv is available on path
_in_env ${PYENV_ROOT}/bin ${PATH} || _prependenv PATH "${PYENV_ROOT}/bin"

if (! command -v pyenv > /dev/null); then
    if [ ! -d "${PYENV_ROOT}" ]; then
        git clone https://github.com/pyenv/pyenv.git ${PYENV_ROOT}
    fi
    cd ${PYENV_ROOT} && git pull

    # Latest
    PYENV_ILDIR=${PYENV_ROOT}/plugins/pyenv-install-latest 
    if [ ! -d "${PYENV_ILDIR}" ]; then
        git clone https://github.com/momo-lab/pyenv-install-latest.git ${PYENV_ILDIR}
    fi
    cd ${PYENV_ILDIR} && git pull

    # Virtualenv
    PYENV_VE=${PYENV_ROOT}/plugins/pyenv-virtualenv
    if [ ! -d "${PYENV_VE}" ]; then
        git clone https://github.com/pyenv/pyenv-virtualenv.git ${PYENV_VE}
    fi
    cd ${PYENV_ILDIR} && git pull

fi

eval "$(${XDG_APP_HOME}/pyenv/bin/pyenv init -)"

# Validate python version
latest=$(pyenv install-latest --print ${BASE_PYTHON_VERSION})
curver=$(pyenv prefix ${latest})
if [ ! $? -eq 0 ]; then
    pyenv install ${latest} && pyenv global ${latest}
fi

pyenv global ${latest}

# ------------------------------------------------------------------------------ 
# PipX
# ------------------------------------------------------------------------------ 
export PIPX_ROOT=${XDG_APP_HOME}/pipx
export PIPX_SITE=${XDG_APP_HOME}/pipx/lib/python3.8/site-packages
export PIPX_HOME=${XDG_CACHE_HOME}
export PIPX_BIN_DIR=${XDG_BIN_HOME}

# Since we install pipx in a custom location we have to tell the python
# interpreter where to look for the pipx modules
export PYTHONPATH=${PYTHONPATH}:${PIPX_SITE}

_in_env ${PIPX_SITE} ${PYTHONPATH} || _prependenv PYTHONPATH ${PIPX_SITE}

if ( ! command -v pipx &> /dev/null ); then
    python3 -m pip install -U pip setuptools
    python3 -m pip install --prefix=${XDG_APP_HOME}/pipx --ignore-installed pipx

    ln -sf ${PIPX_ROOT}/bin/pipx ${XDG_BIN_HOME}

    pipx ensurepath
    if [ ! $? -eq 0 ]; then
        echo "Pipx install failed."
    fi
fi


# ------------------------------------------------------------------------------ 
# Pipenv
# ------------------------------------------------------------------------------ 

export PIPENV_CACHE_DIR=${XDG_CACHE_HOME}
export PIPENV_VENV_IN_PROJECT=1

if ! command pipenv &> /dev/null; then
    pipx install pipenv
fi
