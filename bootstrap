#!/usr/bin/env bash
set -euo pipefail

ROOT="$(dirname $(realpath $BASH_SOURCE))"
STAGES_DIR="$ROOT/bootstrap.d"
DEV_DIR="$HOME/dev/home/github.com/arubertoson/zsh"
BOOTSTRAP_STATE="$HOME/.zsh-bootstrap-state"

touch "$BOOTSTRAP_STATE"

log() { printf "\033[1;36m[BOOT]\033[0m %s\n" "$*"; }
error() { printf "\033[1;31m[ERROR]\033[0m %s\n" "$*"; }

stage_completed() {
    local stage=$1
    grep -q "^${stage}$" "$BOOTSTRAP_STATE"
}

mark_stage_completed() {
    local stage=$1
    if ! stage_completed "$stage"; then
        echo "$stage" >> "$BOOTSTRAP_STATE"
    fi
}

# Cache apt updates for 1 hour to avoid repeated slow updates during development
if [ ! -f /tmp/.apt-updated ] || [ $(($(date +%s) - $(stat -c %Y /tmp/.apt-updated 2>/dev/null || echo 0))) -gt 3600 ]; then
    log "Running apt update / upgrade"
    sudo apt update -y && sudo apt upgrade -y
    touch /tmp/.apt-updated
else
    log "Apt update skipped (done within last hour)"
fi

for stage in "$STAGES_DIR"/[0-9][0-9]-*; do
    [ -x "$stage" ] || continue
    stage_name=$(basename "$stage")

    if stage_completed "$stage_name"; then
        log "Stage $stage_name already completed, skipping"
        continue
    fi

    log "Running $stage_name"
    if "$stage"; then
        mark_stage_completed "$stage_name"
        log "Stage $stage_name completed successfully"
    else
        error "Stage $stage_name failed"
        exit 1
    fi
done

if [ ! -L "$DEV_DIR" ] || [ "$(readlink "$DEV_DIR")" != "$ROOT" ]; then
    log "Creating symlink: $ROOT -> $DEV_DIR"
    mkdir -p "$(dirname "$DEV_DIR")"
    ln -sfn -- "$ROOT" "$DEV_DIR"
else
    log "Development symlink already exists"
fi

log "All stages complete. Run 'just status' to check current state."
